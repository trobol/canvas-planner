{"version":3,"sources":["components/PageViewer.js","pages/Assignments.js","pages/Calendar.js","pages/Charts.js","pages/Home.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["PageViewer","pages","useState","activePage","setActivePage","handleItemClick","e","name","keys","Object","className","jsx","Menu","pointing","secondary","map","key","Item","onClick","active","AssignmentsPanel","assignments","id","course_id","due_at","time_remaining","class_name","sort","a","b","Date","dates","forEach","assignment","split","date","push","List","index","Header","toDateString","hours","getHours","daytime","minutes","getMinutes","ampm","style","width","display","borderRight","paddingLeft","Icon","dayNames","Calendar","days","i","array","Array","j","day","Math","floor","random","hour","length","start","now","end","getTime","console","log","Grid","stretched","height","columns","divided","Column","Row","events","event","Card","color","backgroundColor","toString","padStart","pointStyle","lineStyle","gradesByWeek","from","x","y","gradesByMonth","months","classes","data","labels","datasets","c","label","fill","borderColor","options","responsive","title","text","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","labelString","yAxes","Charts","CardGroup","itemsPerRow","centered","Content","textAlign","Description","Statistic","Value","Label","type","position","Home","Login","isLogin","setLogin","Modal","open","Form","Field","control","Input","Actions","Button","CalendarPanel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c3bf827.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nconst PageViewer = ({ pages }) => {\r\n  const [activePage, setActivePage] = useState('AssignmentsPage');\r\n\r\n  const handleItemClick = (e, { name }) => setActivePage(name);\r\n  const keys = Object.keys(pages);\r\n  return (\r\n    <div className=\"App\">\r\n      <style jsx>\r\n        {`\r\n          .App {\r\n            display: grid;\r\n            grid-row-width:100vw;\r\n          }\r\n          .page {\r\n            display:inline;\r\n            width:100vw;\r\n            height:100vh;\r\n          }\r\n        `}\r\n      </style>\r\n      <Menu pointing secondary>\r\n        {keys.map((key) => <Menu.Item onClick={handleItemClick} key={key} name={key} active={activePage === key} />)}\r\n      </Menu>\r\n      <div className=\"page\">\r\n        {pages[activePage]}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default PageViewer;\r\n","import React, { useState } from 'react';\r\nimport { Card, List, Icon } from 'semantic-ui-react';\r\nimport './Assignments.css';\r\n\r\n/*\r\nconst assignment = {\r\n\tid: 4,\r\n\tname: 'some assignment',\r\n\tdescription: '<p>Do the following:</p>...',\r\n\tcreated_at: '2012-07-01T23:59:00-06:00',\r\n\tupdated_at: '2012-07-01T23:59:00-06:00',\r\n\tdue_at: '2012-07-01T23:59:00-06:00',\r\n\tlock_at: '2012-07-01T23:59:00-06:00',\r\n\tunlock_at: '2012-07-01T23:59:00-06:00',\r\n\thas_overrides: true,\r\n\tall_dates: null,\r\n\tcourse_id: 123,\r\n};\r\n*/\r\nconst AssignmentsPanel = () => {\r\n  const assignments = [\r\n    {\r\n      id: 4,\r\n      name: 'Essay',\r\n      course_id: 123,\r\n      due_at: '2012-07-01T10:00:00-06:00',\r\n      time_remaining: 5,\r\n      class_name: 'COR-234-09',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'some assignment',\r\n      course_id: 123,\r\n      due_at: '2012-07-01T21:59:00-06:00',\r\n      time_remaining: 1,\r\n      class_name: 'CSI-330-01',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'another assignment',\r\n      course_id: 123,\r\n      due_at: '2012-07-02T03:15:00-06:00',\r\n      time_remaining: 0.3,\r\n      class_name: 'EDG-240',\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'math',\r\n      course_id: 123,\r\n      due_at: '2012-07-03T23:00:00-06:00',\r\n      time_remaining: 1.2,\r\n      class_name: 'Math',\r\n    },\r\n  ];\r\n  assignments.sort((a, b) => new Date(a.due_at) < new Date(b.due_at));\r\n  const dates = {};\r\n  assignments.forEach((assignment) => {\r\n    const [date] = assignment.due_at.split('T');\r\n    if (!dates[date]) dates[date] = [];\r\n    dates[date].push(assignment);\r\n  });\r\n  return (\r\n    <List>\r\n      {Object.keys(dates).map((date, index) => (\r\n        <List.Item>\r\n          <List.Header>\r\n            {(new Date(date).toDateString())}\r\n          </List.Header>\r\n          <List.List>\r\n            {dates[date].map(({\r\n\t\t\t\t\t\t  name, due_at, time_remaining, class_name,\r\n            }) => {\r\n\t\t\t\t\t\t  const date = new Date(due_at);\r\n\t\t\t\t\t\t  // https://stackoverflow.com/a/8888498/8781351\r\n\t\t\t\t\t\t  let hours = date.getHours();\r\n\t\t\t\t\t\t  const daytime = hours < 13 && hours > 1;\r\n\t\t\t\t\t\t  let minutes = date.getMinutes();\r\n\t\t\t\t\t\t  const ampm = hours >= 12 ? 'PM' : 'AM';\r\n\t\t\t\t\t\t  hours %= 12;\r\n\t\t\t\t\t\t  hours = hours || 12;\r\n\t\t\t\t\t\t  minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n\t\t\t\t\t\t  return (\r\n  <List.Item>\r\n\r\n    <div className=\"assignment-container\">\r\n      <span>\r\n        <span style={{ width: 150, display: 'inline-block', borderRight: '1px solid' }}>\r\n          {class_name}\r\n          {' '}\r\n        </span>\r\n        <span style={{ paddingLeft: 10 }}>{name}</span>\r\n      </span>\r\n      <span className=\"assignment-time-remaining\">\r\n        <span>{time_remaining}</span>\r\n      </span>\r\n      <span className=\"assignment-time\">\r\n        {`${hours}:${minutes} ${ampm}`}\r\n        <Icon name={daytime ? 'sun' : 'moon'} />\r\n      </span>\r\n    </div>\r\n  </List.Item>\r\n\t\t\t\t\t\t  );\r\n            })}\r\n          </List.List>\r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n\r\n  );\r\n};\r\n\r\nexport default AssignmentsPanel;\r\n","import React from 'react';\r\nimport { Grid, Card } from 'semantic-ui-react';\r\n\r\nimport './Calendar.css';\r\n\r\nconst dayNames = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday',\r\n];\r\n\r\nconst Calendar = () => {\r\n  const days = [];\r\n  for (let i = 0; i < 7; i += 1) {\r\n    const array = new Array(24);\r\n    for (let j = 0; j < 24; j += 1) { array[j] = []; }\r\n    days.push(array);\r\n  }\r\n\r\n  for (let i = 0; i < 6; i += 1) {\r\n    const day = Math.floor(Math.random() * 7);\r\n    const hour = Math.floor(Math.random() * 24);\r\n    const length = (1 + Math.random() * 3.0);\r\n    days[day][hour].push({\r\n      name: 'Assignment', start: Date.now(), end: new Date((new Date()).getTime() + length * 60 * 60 * 1000), length,\r\n    });\r\n  }\r\n  console.log(days);\r\n  return (\r\n    <Grid className=\"calendar\" stretched style={{ height: '100%' }} columns={7} divided>\r\n      {days.map((hours, day) => (\r\n        <Grid.Column key={day} stretched>\r\n          <Grid.Row>{dayNames[day]}</Grid.Row>\r\n          {console.log(hours)}\r\n          {hours.map((events, hour) => (\r\n            <Grid.Row key={`${day}${hour}`}>\r\n\r\n              {events.map((event, index) => (\r\n                <Card\r\n                  style={{\r\n                    color: 'white', height: `${event.length * 100}%`, backgroundColor: `#${(hour * 1000.0 + day * 20000.0).toString(16).padStart(6, '0')}`,\r\n                  }}\r\n                  className=\"event\"\r\n                >\r\n                  <p>{event.name}</p>\r\n\r\n                </Card>\r\n              ))}\r\n\r\n            </Grid.Row>\r\n          ))}\r\n\r\n        </Grid.Column>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {\r\n  CardGroup, Card, Statistic, Grid,\r\n} from 'semantic-ui-react';\r\nimport { Line, Scatter } from 'react-chartjs-2';\r\n\r\nconst pointStyle = [\r\n  '#232f49',\r\n  '#1d2c2e',\r\n  '#382021',\r\n  '#1a2644',\r\n  '#2a232e',\r\n  '#08214e',\r\n  '#161a46',\r\n];\r\n\r\nconst lineStyle = [\r\n  '#3743af',\r\n  '#1654c3',\r\n  '#6b5874',\r\n  '#4161aa',\r\n  '#8d5153',\r\n  '#4a6f75',\r\n  '#5976b8',\r\n];\r\n\r\nconst gradesByWeek = (length) => Array.from({ length }, () => ({\r\n  x: Math.floor(Math.random() * 15) + 1,\r\n  y: Math.floor(Math.random() * 40) + 60,\r\n}));\r\n\r\nconst gradesByMonth = (months) => Array.from({ length: months.length }, () => Math.floor(Math.random() * 40) + 60);\r\n\r\nconst months = ['January', 'February', 'March', 'April', 'May'];\r\n\r\n\r\nconst classes = [\r\n  {\r\n    name: 'CSI-330-01',\r\n    gradesByWeek: gradesByWeek(15),\r\n    gradesByMonth: gradesByMonth(months),\r\n  },\r\n  {\r\n    name: 'WEB-320-01',\r\n    gradesByWeek: gradesByWeek(15),\r\n    gradesByMonth: gradesByMonth(months),\r\n  },\r\n  {\r\n    name: 'CSI-480-01',\r\n    gradesByWeek: gradesByWeek(15),\r\n    gradesByMonth: gradesByMonth(months),\r\n  },\r\n  {\r\n    name: 'CSI-300-01',\r\n    gradesByWeek: gradesByWeek(15),\r\n    gradesByMonth: gradesByMonth(months),\r\n  },\r\n  {\r\n    name: 'CSI-340-01',\r\n    gradesByWeek: gradesByWeek(15),\r\n    gradesByMonth: gradesByMonth(months),\r\n  },\r\n];\r\n\r\nconst datasets = classes.map((c, index) => ({\r\n  label: c.name,\r\n  data: c.gradesByMonth,\r\n  fill: false,\r\n  backgroundColor: pointStyle[index],\r\n  borderColor: lineStyle[index],\r\n}));\r\n\r\nconst data = {\r\n  labels: months,\r\n  datasets,\r\n};\r\n\r\nconst options = {\r\n  responsive: true,\r\n  title: {\r\n    display: true,\r\n    text: 'Grades By Month',\r\n  },\r\n  tooltips: {\r\n    mode: 'index',\r\n    intersect: false,\r\n  },\r\n  hover: {\r\n    mode: 'nearest',\r\n    intersect: true,\r\n  },\r\n  scales: {\r\n    xAxes: [{\r\n      display: true,\r\n      scaleLabel: {\r\n        display: true,\r\n        labelString: 'Month',\r\n      },\r\n    }],\r\n    yAxes: [{\r\n      display: true,\r\n      scaleLabel: {\r\n        display: true,\r\n        labelString: 'Grade',\r\n      },\r\n    }],\r\n  },\r\n};\r\n\r\nconst Charts = () => (\r\n  <>\r\n    <CardGroup itemsPerRow={5}>\r\n      {classes.map((c) => (\r\n        <Card centered>\r\n          <Card.Content textAlign=\"center\">\r\n            <Card.Header>{c.name}</Card.Header>\r\n          </Card.Content>\r\n          <Card.Content textAlign=\"center\">\r\n            <Card.Description>\r\n              <Statistic>\r\n                <Statistic.Value>{c.gradesByMonth[4]}</Statistic.Value>\r\n                <Statistic.Label>Current Grade</Statistic.Label>\r\n              </Statistic>\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      ))}\r\n    </CardGroup>\r\n    <Grid>\r\n      <Grid.Row columns={2}>\r\n        <Grid.Column>\r\n          <Line data={data} options={options} />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Scatter\r\n            data={{\r\n              datasets: classes.map((c, index) => ({\r\n                label: c.name,\r\n                data: c.gradesByWeek,\r\n                backgroundColor: pointStyle[index],\r\n                borderColor: lineStyle[index],\r\n              })),\r\n            }}\r\n            options={{\r\n              responsive: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Grades By Week',\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  type: 'linear',\r\n                  position: 'bottom',\r\n                }],\r\n              },\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  </>\r\n);\r\n\r\nexport default Charts;\r\n","import React, { useState } from 'react';\r\n\r\nconst Home = () => <h1>THIS IS THE HOME</h1>;\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Modal, Button, Form, Input,\r\n} from 'semantic-ui-react';\r\n\r\nconst Login = () => {\r\n  const [isLogin, setLogin] = useState(false);\r\n  return (\r\n    <Modal\r\n      open={!isLogin}\r\n    >\r\n      <Modal.Header>Login</Modal.Header>\r\n      <Modal.Content>\r\n          This webiste does not work without a Canvas API.\r\n        <Form>\r\n          <Form.Field\r\n            label=\"Access Token\"\r\n            control={Form.Input}\r\n          />\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() => setLogin(!isLogin)}>Sumbit</Button>\r\n      </Modal.Actions>\r\n\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport PageViewer from './components/PageViewer';\r\n\r\nimport {\r\n  Home, AssignmentsPanel, Calendar, Charts, Login,\r\n} from './pages';\r\n\r\n\r\nconst pages = {\r\n  Home: <Home />,\r\n  AssignmentsPanel: <AssignmentsPanel />,\r\n  CalendarPanel: <Calendar />,\r\n  Charts: <Charts />,\r\n  Login: <Login />,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <PageViewer pages={pages} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}